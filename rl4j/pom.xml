<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.deeplearning4j</groupId>
		<artifactId>deeplearning4j</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>rl4j</artifactId>

	<name>rl4j</name>
	<version>1.0.0-KG-SNAPSHOT</version>

	<properties>
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<gym.version>0.21.0</gym.version>
	</properties>

	<dependencies>
		<!-- ALE Dependencies -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>ale-platform</artifactId>
			<version>${ale.version}-${javacpp-presets.version}</version>
		</dependency>

		<!-- Gym Dependencies -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>gym-platform</artifactId>
			<version>${gym.version}-${javacpp-presets.version}</version>
		</dependency>

		<!-- Malmo Dependencies -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20190722</version>
			<!-- <version>${json.version}</version> -->
		</dependency>
		<dependency>
			<groupId>com.microsoft.msr.malmo</groupId>
			<artifactId>MalmoJavaJar</artifactId>
			<version>0.30.0</version>
		</dependency>

		<!-- DL4J Dependencies -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>${nd4j.backend}</artifactId>
			<version>${nd4j.version}</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.jupter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-common-tests</artifactId>
			<version>${nd4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.3.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>

		<!-- Logging Dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Other Dependencies -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacv</artifactId>
			<version>${javacv.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>${javacpp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>opencv</artifactId>
			<version>${opencv.version}-${javacpp-presets.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>opencv-platform</artifactId>
			<version>${opencv.version}-${javacpp-presets.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>ffmpeg</artifactId>
			<version>${ffmpeg.version}-${javacpp-presets.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>ffmpeg-platform</artifactId>
			<version>${ffmpeg.version}-${javacpp-presets.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<dependency>
			<groupId>net.jodah</groupId>
			<artifactId>typetools</artifactId>
			<version>0.6.3</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>snapshots-repo</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>  <!-- Optional, update daily -->
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<phase>test</phase>
						<id>enforce-choice-of-nd4j-test-backend</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>${skipBackendChoice}</skip>
							<rules>
								<requireActiveProfile>
									<profiles>nd4j-tests-cpu,nd4j-tests-cuda</profiles>
									<all>false</all>
								</requireActiveProfile>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.lewisd</groupId>
				<artifactId>lint-maven-plugin</artifactId>
				<version>0.0.11</version>
				<configuration>
					<failOnViolation>true</failOnViolation>
					<onlyRunRules>
						<rule>DuplicateDep</rule>
						<rule>RedundantDepVersion</rule>
						<rule>RedundantPluginVersion</rule>
						<!-- Rules incompatible with Java 9 <rule>VersionProp</rule> <rule>DotVersionProperty</rule> -->
					</onlyRunRules>
					<xmlOutputFile>${project.build.directory}/maven-lint-result.xml</xmlOutputFile>
				</configuration>
				<executions>
					<execution>
						<id>pom-lint</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<configuration>
					<directories>
						<directory>rl4j</directory>
					</directories>
				</configuration>
			</plugin>
			<!-- Configuration for git-commit-id plugin - used with ND4J version check 
				functionality -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<!-- Add generated git.properties files resource directory, for output 
				of git-commit-id plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>nd4j-tests-cpu</id>
			<dependencies>
				<dependency>
					<groupId>org.nd4j</groupId>
					<artifactId>nd4j-native</artifactId>
					<version>${nd4j.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>nd4j-tests-cuda</id>
			<properties>
				<!-- Note we put these properties here because the cuda modules themselves 
					have the cuda version tied to the artifact name. This allows us to use variables 
					for the testing. -->
				<cuda.version>11.4</cuda.version>
				<cudnn.version>8.2</cudnn.version>
				<javacpp-presets.cuda.version>1.5.6</javacpp-presets.cuda.version>
				<junit.jupiter.execution.parallel.enabled>false</junit.jupiter.execution.parallel.enabled>
				<junit.jupiter.execution.parallel.mode.default>same_thread</junit.jupiter.execution.parallel.mode.default>

			</properties>

			<dependencies>
				<dependency>
					<groupId>org.nd4j</groupId>
					<artifactId>nd4j-cuda-11.4</artifactId>
					<version>${nd4j.version}</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.deeplearning4j</groupId>
					<artifactId>deeplearning4j-cuda-11.4</artifactId>
					<version>${dl4j.version}</version>
				</dependency>

				<dependency>
					<groupId>org.bytedeco</groupId>
					<artifactId>cuda-platform-redist</artifactId>
					<version>${cuda.version}-${cudnn.version}-${javacpp-presets.cuda.version}</version>
					<scope>test</scope>
				</dependency>

			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<CUDA_VISIBLE_DEVICES>0</CUDA_VISIBLE_DEVICES>
							</environmentVariables>
							<parallelMavenExecution>false</parallelMavenExecution>
							<parallel>false</parallel>
							<forkCount>0</forkCount>
							<threadCount>1</threadCount>
							<perCoreThreadCount>false</perCoreThreadCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>nd4j-tests-aurora</id>
		</profile>
	</profiles>
</project>
